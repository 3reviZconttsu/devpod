name: Publish Desktop
on: workflow_dispatch

jobs:
  release:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        settings:
          - host: macos-latest
            target: x86_64-apple-darwin
            os: darwin
            arch: amd64
          - host: macos-latest
            target: aarch64-apple-darwin
            os: darwin
            arch: arm64
          - host: windows-latest
            target: x86_64-pc-windows-msvc
          - host: windows-latest
            target: aarch64-pc-windows-msvc
          - host: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            os: linux
            arch: amd64
          - host: ubuntu-latest
            target: aarch64-unknown-linux-gnu
            os: linux
            arch: arm64
    name: ${{ matrix.settings.target }}
    runs-on: ${{ matrix.settings.host }}
    env:
      GO111MODULE: on
      GOFLAGS: -mod=vendor

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup System Dependencies
        if: matrix.settings.host == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.0-dev libayatana-appindicator3-dev librsvg2-dev

      - name: Rust setup
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.settings.target }}

      - name: Rust cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: "./desktop/src-tauri -> target"

      - name: Go setup
        uses: actions/setup-go@v2
        with:
          go-version: 1.19

      - name: Build Sidecar CLI
        if: matrix.settings.host != 'windows-latest'
        run: |
          BIN_NAME=devpod-${{ matrix.settings.target }}
          GOOS=${{ matrix.settings.os }} GOARCH=${{ matrix.settings.arch }} go build -ldflags "-s -w" -o "test/$BIN_NAME"
          cp "test/$BIN_NAME" "desktop/src-tauri/bin/$BIN_NAME"
          ls desktop/src-tauri/bin

      - name: Build Sidecar CLI
        if: matrix.settings.host == 'windows-latest'
        shell: cmd
        run: |
          set GOOS=windows
          set GOARCH=${{ matrix.settings.target }}
          set BIN_NAME=devpod-${{ matrix.settings.target }}.exe

          go build -ldflags "-s -w" -o "test/%BIN_NAME%"

          xcopy /F /Y "test\%BIN_NAME%" desktop\bin\*

      - name: Sync node version and setup cache
        uses: actions/setup-node@v3
        with:
          node-version: "lts/*"
          cache: "yarn"
          cache-dependency-path: "./desktop/yarn.lock"

      - name: Install frontend dependencies
        run: yarn install
        working-directory: "./desktop"

      - name: Build Desktop App
        uses: tauri-apps/tauri-action@dev
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          # ENABLE_CODE_SIGNING: ${{ secrets.APPLE_CERTIFICATE }}
          # APPLE_CERTIFICATE: ${{ secrets.APPLE_CERTIFICATE }}
          # APPLE_CERTIFICATE_PASSWORD: ${{ secrets.APPLE_CERTIFICATE_PASSWORD }}
          # APPLE_SIGNING_IDENTITY: ${{ secrets.APPLE_SIGNING_IDENTITY }}
          # APPLE_ID: ${{ secrets.APPLE_ID }}
          # APPLE_PASSWORD: ${{ secrets.APPLE_PASSWORD }}
        with:
          projectPath: "./desktop"
          args: " --target ${{ matrix.settings.target }}"
          tagName: devpod-desktop-v__VERSION__ # the action automatically replaces \_\_VERSION\_\_ with the app version
          releaseName: "DevPod-Desktop-v__VERSION__"
          releaseBody: "See the assets to download this version and install."
          releaseDraft: true
          prerelease: false
